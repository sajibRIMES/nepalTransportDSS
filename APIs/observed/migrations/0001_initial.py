# Generated by Django 4.1.3 on 2023-02-13 10:00

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObserveData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stcode', models.CharField(db_column='stCode', max_length=12)),
                ('date_time', models.CharField(max_length=20)),
                ('pointname', models.CharField(max_length=40)),
                ('max_norm', models.CharField(max_length=14)),
                ('min_norm', models.CharField(max_length=14)),
                ('sunrise', models.CharField(db_column='SunRise', max_length=20)),
                ('sunset', models.CharField(db_column='SunSet', max_length=20)),
                ('morning', models.CharField(db_column='Morning', max_length=20)),
                ('evenning', models.CharField(db_column='Evenning', max_length=20)),
                ('moonrise', models.CharField(db_column='MoonRise', max_length=20)),
                ('moonset', models.CharField(db_column='MoonSet', max_length=20)),
                ('lch', models.CharField(max_length=11)),
                ('shv', models.CharField(max_length=11)),
                ('clouds', models.CharField(max_length=11)),
                ('wind_direction', models.CharField(max_length=40)),
                ('wind_speed', models.CharField(max_length=20)),
                ('wind_meter', models.CharField(max_length=20)),
                ('drybulb', models.CharField(max_length=20)),
                ('dew_point', models.CharField(max_length=20)),
                ('station_level_p', models.CharField(max_length=20)),
                ('sea_level_p', models.CharField(max_length=20)),
                ('m_humidity', models.CharField(max_length=14)),
                ('e_humidity', models.CharField(max_length=14)),
                ('humidity', models.CharField(max_length=14)),
                ('humidity_min', models.CharField(max_length=14)),
                ('humidity_max', models.CharField(max_length=14)),
                ('maximum_t', models.CharField(max_length=20)),
                ('max_norm_def', models.CharField(max_length=20)),
                ('min_norm_def', models.CharField(max_length=20)),
                ('minimum_t', models.CharField(max_length=20)),
                ('rainfall_00', models.CharField(max_length=20)),
                ('rainfall_06', models.CharField(max_length=20)),
                ('rainfall_12', models.CharField(max_length=20)),
                ('rainfall_18', models.CharField(max_length=20)),
                ('rainfall', models.CharField(max_length=20)),
                ('rainfall_24', models.CharField(max_length=20)),
                ('rainfall_3', models.CharField(max_length=20)),
                ('rainfall_6', models.CharField(max_length=20)),
                ('lightning', models.CharField(max_length=20)),
                ('thunder', models.CharField(max_length=20)),
                ('fogg', models.CharField(max_length=20)),
                ('rain', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'observe_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('st_code', models.IntegerField(blank=True, null=True)),
                ('st_name', models.CharField(blank=True, max_length=15, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('lon', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'station_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StationObserved',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stationid', models.IntegerField(blank=True, db_column='stationID', null=True)),
                ('forecastdate', models.DateField(blank=True, db_column='forecastDate', null=True)),
                ('startstep', models.DateTimeField(blank=True, db_column='startStep', null=True)),
                ('endstep', models.DateTimeField(blank=True, db_column='endStep', null=True)),
                ('precipitation', models.CharField(blank=True, max_length=50, null=True)),
                ('temperature', models.CharField(blank=True, max_length=50, null=True)),
                ('relative_humidity', models.CharField(blank=True, max_length=50, null=True)),
                ('dewpoint', models.CharField(blank=True, max_length=50, null=True)),
                ('wind_speed', models.CharField(blank=True, max_length=50, null=True)),
                ('wind_direction', models.CharField(blank=True, max_length=50, null=True)),
                ('visibility', models.CharField(blank=True, max_length=50, null=True)),
                ('total_cloud_cover', models.CharField(blank=True, max_length=50, null=True)),
                ('station_level_pressure', models.CharField(blank=True, max_length=50, null=True)),
                ('sea_level_pressure', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'station_observed',
                'managed': False,
            },
        ),
    ]
